---
## informedelectorate
# checkout project

- name: Clone git repository
  git: >
    dest={{informed_project_dir}}
    repo={{informed_repo_url}}
    update=no
    version={{ repo_version }}
  become: yes
  become_user: www-data
  register: cloned

- name: chown /var/www
  command: "{{ item }}"
  with_items:
    - chown -R {{user}}:www-data {{ informed_project_dir }}
    - find {{ informed_project_dir }} -type d -exec chmod 775 {} +
    - find {{ informed_project_dir }} -type f -exec chmod 664 {} +

### ssl
- name: copy ini file
  template: src=le-renew.ini.j2 dest=/usr/local/etc/le-renew-{{ informed_host }}.ini

- name: stop nginx
  service: name=nginx state=stopped

- name: run letsencrypt
  shell: ./letsencrypt-auto certonly --standalone --agree-tos --config /usr/local/etc/le-renew-{{ informed_host }}.ini
  args: 
    chdir: /opt/letsencrypt
    creates: /etc/letsencrypt/live/{{informed_host}}/fullchain.pem

- name: Configure nginx
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/{{ informed_host }}
  notify:
    - restart php-fpm

- name: start nginx
  service: name=nginx state=started

- name: copy renewal script
  template: src=le-renew.j2 dest=/usr/local/sbin/le-renew-{{ informed_host }} mode=0700

- name: create .well-known directory
  file: path={{ informed_project_dir }}/.well-known state=directory mode=0755

- name: Install renewal cron
  cron: name="Let's Encrypt Renewal {{ informed_host }}" day=1 hour=3 minute=30 
        job="/usr/local/sbin/le-renew-{{ informed_host }} >> /var/log/le-renewal.log"


#### nginx
- name: Configure nginx
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/{{ informed_host }}

- name: create symbolic link for nginx
  file:
    src: /etc/nginx/sites-available/{{ informed_host }}
    dest: /etc/nginx/sites-enabled/{{ informed_host }}
    state: link
  notify:
    - restart php-fpm
    - restart nginx        

- name: composer create-project
  composer: 
    command: install 
    working_dir: "{{informed_project_dir}}" 
    # optimize_autoloader=no
  become: yes
  become_user: "{{user}}"
  # when: cloned|changed

- name: copy .env file
  template: src=.env.j2 dest={{informed_project_dir}}/.env force=yes  

- name: run npm install
  shell: npm install
  become: yes
  become_user: "{{user}}"
  args:
    chdir: "{{informed_project_dir}}"  

- name: laravel-mix
  command: "{{ item }}"
  with_items:
      - npm run build {{ (app_env == 'production') | ternary('production', 'dev')  }}
  become: yes
  become_user: "{{user}}"
  args:
    chdir: "{{informed_project_dir}}"      


