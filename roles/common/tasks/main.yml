---

- name: Password values
  ansible.builtin.debug:
    msg: "root: {{ root_password }}; deploy {{ deploy_password }}"    

- name: Change root password
  user: name=root password="{{ root_password|password_hash('sha512')  }}"

- name: Add deploy user
  user: name={{ deploy_user_name }} password="{{ deploy_password|password_hash('sha512')  }}" shell=/bin/bash

- name: Add authorized keys for deploy user
  authorized_key: user={{ deploy_user_name }} key="{{ lookup('file', item) }}"
  with_items: "{{deploy_public_keys}}"

- name: Add deploy user to sudoers
  lineinfile: dest=/etc/sudoers
              regexp="{{ deploy_user_name }} ALL"
              line="{{ deploy_user_name }} ALL=(ALL) ALL"
              state=present


- name: disable root ssh 
  lineinfile: dest=/etc/ssh/sshd_config regexp='^(.*)PermitRootLogin' line='PermitRootLogin no'
  notify:
  - restart ssh              

# apt
- name: Install required packages
  apt: state=present pkg={{ required_packages }}

- name: Install optional packages
  apt: state=present pkg={{optional_packages}}

# firewall
- name: Enable UFW
  ufw: direction=incoming policy=deny state=enabled

- name: UFW limit SSH
  ufw: rule=limit port=ssh

- name: UFW open HTTP
  ufw: rule=allow port=http

- name: UFW open HTTPS
  ufw: rule=allow port=https

# swap  
- name: check if swap exists
  stat: path=/swapfile
  register: swapfile

- name: allocate swap
  command: fallocate -l 2G /swapfile creates=/swapfile

- name: mkswap
  command: mkswap /swapfile
  when: swapfile.stat.exists == False

- name: fix swapfile perms
  file: path=/swapfile owner=root group=root mode=0600 
  when: swapfile.stat.exists == False

- name: swapon
  command: swapon /swapfile
  when: swapfile.stat.exists == False

- name: write swap entry in fstab
  mount: name=none src=/swapfile fstype=swap opts=sw passno=0 dump=0 state=present
  when: swapfile.stat.exists == False

# postfix/email log
- name: Set up Postfix to relay mail
  debconf: name=postfix
           question='{{ item.question }}'
           value='{{ item.value }}'
           vtype='{{ item.vtype }}'
  with_items:
    - { question: 'postfix/mailname', value: '{{ ansible_fqdn }}', vtype: 'string' }
    - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }

- name: Email log summary daily
  lineinfile: dest=/etc/cron.daily/00logwatch
              regexp="^/usr/sbin/logwatch"
              line="/usr/sbin/logwatch --output mail --mailto {{ report_email }} --detail high"
              state=present create=yes
