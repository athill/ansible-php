---
# php, nginx, composer
# PHP
- name: install nginx and php packages
  apt: name={{ item }} update_cache=yes state=latest force=yes
  with_items:
    - mcrypt
    - nginx
    - zip
    - unzip
    - php{{php_version}}-cli
    - php{{php_version}}-curl
    - php{{php_version}}-fpm
    - php{{php_version}}-intl
    - php{{php_version}}-json
    - php{{php_version}}-mbstring    
    - php{{php_version}}-mcrypt
    - php{{php_version}}-mysql
    - php{{php_version}}-xml
    - php{{php_version}}-zip
    - php-xdebug

# nginx (move to its own role)
- name: uncomment server_names_hash_bucket_size  in nginx.conf
  replace:
    destfile: /etc/nginx/nginx.conf
    regexp: '^\s*#(\s*server_names_hash_bucket_size.*)$'
    replace: '\1'    

- name: delete sites-enabled/default
  file: 
      path: /etc/nginx/sites-enabled/default
      state: absent

# create web directory
- name: create {{ web_dir }} directory
  file: dest={{ web_dir }} state=directory owner=www-data group=www-data mode=0775    

- name: chown/chmod {{ web_dir }}
  command: "{{ item }}"
  with_items:
    - chown {{user}}:www-data {{ web_dir }}
    - chmod 775 {{ web_dir }}

- name: ensure php-fpm cgi.fix_pathinfo=0
  lineinfile: dest=/etc/php/{{php_version}}/fpm/php.ini regexp='^(.*)cgi.fix_pathinfo=' line=cgi.fix_pathinfo=0
  notify:
    - restart php-fpm
    - restart nginx

- name: enable php mcrypt module
  shell: phpenmod mcrypt
  args:
    creates: /etc/php/cli/conf.d/20-mcrypt.ini

# composer
- name: install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  args:
    creates: /usr/local/bin/composer
